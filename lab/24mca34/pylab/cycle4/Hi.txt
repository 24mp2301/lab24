
------------------------------------
1)

def fibonacci(n):
    if n <= 1:
        return n
    
    else:
        return fibonacci(n-1) + fibonacci(n-2)

def print_fibonacci_series(n):
    for i in range(n):
        print(fibonacci(i), end=" ")

n = 10  
print_fibonacci_series(n)

------------------------------------
2)


def add(x, y):
    return x + y


def subtract(x, y):
    return x - y


def multiply(x, y):
    return x * y


def divide(x, y):
    if y != 0:
        return x / y
    else:
        return "Error! Division by zero."


def modulus(x, y):
    return x % y


def calculator():
    while True:
    
        print("\nSelect operation:")
        print("1. Add")
        print("2. Subtract")
        print("3. Multiply")
        print("4. Divide")
        print("5. Modulus")
        print("6. Exit")

        
        choice = input("Enter choice (1/2/3/4/5/6): ")

        
        if choice == '6':
            print("Exiting the calculator. Goodbye!")
            break

   
        try:
            num1 = float(input("Enter first number: "))
            num2 = float(input("Enter second number: "))
        except ValueError:
            print("Invalid input! Please enter numeric values.")
            continue

         
        if choice == '1':
            print(f"{num1} + {num2} = {add(num1, num2)}")
        elif choice == '2':
            print(f"{num1} - {num2} = {subtract(num1, num2)}")
        elif choice == '3':
            print(f"{num1} * {num2} = {multiply(num1, num2)}")
        elif choice == '4':
            print(f"{num1} / {num2} = {divide(num1, num2)}")
        elif choice == '5':
            print(f"{num1} % {num2} = {modulus(num1, num2)}")
        else:
            print("Invalid input! Please select a valid operation.")


calculator()

------------------------------------
3)



def is_prime(num):
    if num <= 1:
        return False
    for i in range(2, int(num ** 0.5) + 1):
        if num % i == 0:
            return False
    return True


def nth_prime(n):
    count = 0
    num = 2  
    while count < n:
        if is_prime(num):
            count += 1
        num += 1
    return num - 1

n = int(input("Enter the value of n: "))
print(f"The {n}th prime number is: {nth_prime(n)}")

-----------------------------------
4)

area_of_square = lambda side: side * side


area_of_rectangle = lambda length, width: length * width


area_of_triangle = lambda base, height: 0.5 * base * height


side = 5
length = 10
width = 4
base = 6
height = 3

print(f"Area of square: {area_of_square(side)}")
print(f"Area of rectangle: {area_of_rectangle(length, width)}")
print(f"Area of triangle: {area_of_triangle(base, height)}")

-----------------------------------
5)
# List of numbers to generate powers of 2
numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8]

powers_of_2 = map(lambda x: 2 ** x, numbers)


print(list(powers_of_2))

-----------------------------------
6)


def factorial(num):
    if num == 0 or num == 1:
        return 1
    else:
        fact = 1
        for i in range(2, num + 1):
            fact *= i
        return fact


def sum_series(n):
    total_sum = 0
    for i in range(1, n + 1):
        term = (i ** i) / factorial(i)  # (i^i) / i!
        total_sum += term
    return total_sum


n = int(input("Enter the value of n: "))
result = sum_series(n)
print(f"The sum of the series up to the {n}th term is: {result}")

-----------------------------------
7)

def compare(S1, S2, n):
    
    if len(S1) < n or len(S2) < n:
        return False  # If either string is too short, return False
    

    return S1[:n] == S2[:n]


S1 = input("Enter first string: ")
S2 = input("Enter second string: ")
n = int(input("Enter the value of n: "))

result = compare(S1, S2, n)
print(f"The result of comparison is: {result}")
-----------------------------------
8)


def factorial(num):
    if num == 0 or num == 1:
        return 1
    else:
        fact = 1
        for i in range(2, num + 1):
            fact *= i
        return fact


def permutations(n, r):
    return factorial(n) // factorial(n - r)


def combinations(n, r):
    return factorial(n) // (factorial(r) * factorial(n - r))

# Example usage
n = int(input("Enter the value of n: "))
r = int(input("Enter the value of r: "))

p_result = permutations(n, r)
c_result = combinations(n, r)

print(f"The number of permutations p({n}, {r}) is: {p_result}")
print(f"The number of combinations c({n}, {r}) is: {c_result}")
-----------------------------------
